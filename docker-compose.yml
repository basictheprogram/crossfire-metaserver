---
services:
  mysql:
    container_name: crossfire-metaserver-mysql
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - crossfire-metaserver-mysql-data:/var/lib/mysql
      - ./.devcontainer/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "3306:3306"
    networks:
      - metaserver

  www:
    container_name: crossfire-metaserver-www
    image: basictheprogram/crossfire-metaserver_www::latest
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - crossfire-metaserver-html-files:/var/www/html/:cached
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PWD=${DB_PWD}
      - DB_NAME=${DB_NAME}
    ports:
      - "80:80"
      - "443:443"
    networks:
      - metaserver

  certbot:
    container_name: crossfire-metaserver-certbot
    build:
      context: ./docker/certbot
      dockerfile: Dockerfile
    entrypoint: []
    volumes:
      - crossfire-metaserver-html-files:/var/www/html/:cached
      - /opt/docker/portal/letsencrypt:/etc/letsencrypt
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - CERTBOT_DOMAIN=${CERTBOT_DOMAIN}
    restart: "no"
    networks:
      - metaserver

networks:
  production:
    name: metaserver
    driver: bridge

volumes:
  crossfire-metaserver-mysql-data:
    driver: local
  crossfire-metaserver-html-files:
    driver: local
